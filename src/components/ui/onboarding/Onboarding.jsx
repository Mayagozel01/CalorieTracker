import { useState, useCallback } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { Input } from '@/components/ui/input';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Button } from '@/components/ui/button';
import { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';
import { Link, useNavigate } from 'react-router-dom';
import { calculateAndSaveGoals, setGuestId } from '../../../redux/slices/FoodSlice';
import { toast } from 'react-toastify';
import { v4 as uuidv4 } from 'uuid';
import { auth } from '../../../lib/firebase';

const OnboardingForm = () => {
  const dispatch = useDispatch();
  const navigate = useNavigate();
  const { guestId } = useSelector((state) => state.food);
  const [formData, setFormData] = useState({
    gender: '',
    age: '',
    height: '',
    currentWeight: '',
    activityLevel: '',
    goalType: '',
    targetWeight: '',
    targetDate: '',
  });
  const [error, setError] = useState('');

  // Handle input changes
  const handleChange = useCallback((name, value) => {
    setFormData((prev) => ({ ...prev, [name]: value }));
    setError('');
  }, []);

  // Validate all fields
  const validateForm = useCallback(() => {
    if (!formData.gender) return '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª.';
    const age = Number(formData.age);
    if (!age || age <= 0) return '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç.';
    const height = Number(formData.height);
    if (!height || height <= 0) return '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–æ—Å—Ç.';
    const currentWeight = Number(formData.currentWeight);
    if (!currentWeight || currentWeight <= 0) return '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–µ–∫—É—â–∏–π –≤–µ—Å.';
    const activityLevel = Number(formData.activityLevel);
    if (!activityLevel || activityLevel < 1.2 || activityLevel > 1.9) return '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (1.2‚Äì1.9).';
    const targetWeight = Number(formData.targetWeight);
    if (!targetWeight || targetWeight <= 0) return '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ü–µ–ª–µ–≤–æ–π –≤–µ—Å.';
    if (!formData.targetDate) return '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª–µ–≤—É—é –¥–∞—Ç—É.';
    const today = new Date();
    const selectedDate = new Date(formData.targetDate);
    if (selectedDate < today) return '–¶–µ–ª–µ–≤–∞—è –¥–∞—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –±—É–¥—É—â–µ–º.';
    if (!formData.goalType) return '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ü–µ–ª–∏.';
    return '';
  }, [formData]);

  const handleSubmit = () => {
    const validationError = validateForm();
    if (validationError) {
      setError(validationError);
      toast.error(validationError);
      return;
    }

    const newGuestId = guestId || uuidv4();
    dispatch(setGuestId(newGuestId)); // –°–æ—Ö—Ä–∞–Ω—è–µ–º guestId –≤ Redux

    dispatch(calculateAndSaveGoals(formData))
      .unwrap()
      .then(() => {
        toast.success('–¶–µ–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã! üéâ –í–æ–π–¥–∏—Ç–µ, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å.');
        navigate('/maindashboard'); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞ –¥–ª—è –≥–æ—Å—Ç–µ–π
      })
      .catch((err) => {
        setError('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ' + err);
        toast.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ' + err);
      });
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gradient-to-b from-teal-50 to-blue-50">
      <Card className="w-full max-w-md rounded-xl shadow-lg">
        <CardHeader>
          <CardTitle className="text-2xl font-bold text-center text-teal-700">
            –î–∞–≤–∞–π –¥–æ—Å—Ç–∏–≥–Ω–µ–º —Ç–≤–æ–µ–π —Ü–µ–ª–∏{auth.currentUser?.displayName ? auth.currentUser?.displayName : null}! üöÄ
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-6">
          {error && (
            <div className="text-red-500 text-sm text-center">{error}</div>
          )}

          <div className="space-y-2">
            <label className="block text-sm font-medium text-gray-700">–ü–æ–ª</label>
            <Select value={formData.gender} onValueChange={(value) => handleChange('gender', value)}>
              <SelectTrigger className="w-full">
                <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="male">–ú—É–∂—Å–∫–æ–π</SelectItem>
                <SelectItem value="female">–ñ–µ–Ω—Å–∫–∏–π</SelectItem>
              </SelectContent>
            </Select>
          </div>

          <div className="space-y-2">
            <label className="block text-sm font-medium text-gray-700">–í–æ–∑—Ä–∞—Å—Ç (–ª–µ—Ç)</label>
            <Input
              type="number"
              name="age"
              value={formData.age}
              onChange={(e) => handleChange('age', e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç"
              min="0"
              className="w-full"
            />
          </div>

          <div className="space-y-2">
            <label className="block text-sm font-medium text-gray-700">–†–æ—Å—Ç (—Å–º)</label>
            <Input
              type="number"
              name="height"
              value={formData.height}
              onChange={(e) => handleChange('height', e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ —Ä–æ—Å—Ç"
              min="0"
              className="w-full"
            />
          </div>

          <div className="space-y-2">
            <label className="block text-sm font-medium text-gray-700">–¢–µ–∫—É—â–∏–π –≤–µ—Å (–∫–≥)</label>
            <Input
              type="number"
              name="currentWeight"
              value={formData.currentWeight}
              onChange={(e) => handleChange('currentWeight', e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –≤–µ—Å"
              min="0"
              step="0.1"
              className="w-full"
            />
          </div>

          <div className="space-y-2">
            <label className="block text-sm font-medium text-gray-700">–£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (1.2‚Äì1.9)</label>
            <Input
              type="number"
              name="activityLevel"
              value={formData.activityLevel}
              onChange={(e) => handleChange('activityLevel', e.target.value)}
              placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä, 1.2 (—Å–∏–¥—è—á–∏–π), 1.55 (—É–º–µ—Ä–µ–Ω–Ω—ã–π)"
              min="1.2"
              max="1.9"
              step="0.1"
              className="w-full"
            />
          </div>

          <div className="space-y-2">
            <label className="block text-sm font-medium text-gray-700">–¶–µ–ª–µ–≤–æ–π –≤–µ—Å (–∫–≥)</label>
            <Input
              type="number"
              name="targetWeight"
              value={formData.targetWeight}
              onChange={(e) => handleChange('targetWeight', e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–µ–≤–æ–π –≤–µ—Å"
              min="0"
              step="0.1"
              className="w-full"
            />
          </div>

          <div className="space-y-2">
            <label className="block text-sm font-medium text-gray-700">–¶–µ–ª–µ–≤–∞—è –¥–∞—Ç–∞</label>
            <Input
              type="date"
              name="targetDate"
              value={formData.targetDate}
              onChange={(e) => handleChange('targetDate', e.target.value)}
              min={new Date().toISOString().split('T')[0]}
              className="w-full"
            />
          </div>

          <div className="space-y-2">
            <label className="block text-sm font-medium text-gray-700">–í–∞—à–∞ —Ü–µ–ª—å</label>
            <Select value={formData.goalType} onValueChange={(value) => handleChange('goalType', value)}>
              <SelectTrigger className="w-full">
                <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª—å" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="lose">–ü–æ—Ö—É–¥–µ—Ç—å</SelectItem>
                <SelectItem value="gain">–ù–∞–±—Ä–∞—Ç—å –≤–µ—Å</SelectItem>
                <SelectItem value="maintain">–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–µ—Å</SelectItem>
              </SelectContent>
            </Select>
          </div>

          <div className="flex justify-center mt-6">
            <Button onClick={handleSubmit} variant="teal" className="text-xl text-center text-teal-700 hover:text-teal-50">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</Button>
          </div>
          <p className="text-center text-sm text-gray-500 mt-4">
            –¢—ã –Ω–∞ –ø—É—Ç–∏ –∫ —Å–≤–æ–µ–π —Ü–µ–ª–∏! üåü
          </p>
          <div className="text-center">
            {!auth.currentUser?.displayName?
            <Link to="/login">
              <Button variant="teal" className="text-xl text-center text-teal-700 hover:text-teal-50">–í–æ–π—Ç–∏</Button></Link>:null}
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default OnboardingForm;